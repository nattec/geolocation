# -*- coding: utf-8 -*-
"""location.ipynb

Automatically generated by Colaboratory.

## Location
"""

from geopy.geocoders import Nominatim
from os import system, name
import pandas as pd


def get_location(coord):

  #getting data from the coordinate
  geolocator = Nominatim(user_agent="coordinateconverter") 
  location = geolocator.reverse(coord)
  data = location.raw
  data = data['address']
  address = str(data)

  #getting the postal code
  country=str(data['country'])
  countryCode =str(data['country_code']).upper()
  postalCode=(data['postcode'])
  
  #loading excel file with postal codes and searching the code
  post_codes = pd.read_excel('/content/PostCodeDK2.xlsx')

  if countryCode=="DK":
    postalCode=int(data['postcode'])
    if postalCode in post_codes:
      district= post_codes.loc[0,postalCode]
      final_district = district + ", " + str(postalCode)
    else:
      if 1000 <= postalCode <= 1499:
        final_district= "København K, "+ str(postalCode)
      elif 1500 <= postalCode <= 1799:
        final_district= "Vesterbro, "+ str(postalCode)
      elif 1800 <= postalCode <= 2000:
        final_district= "Frederiksberg, "+ str(postalCode)
      elif 'town' in data:
        town =data['town']
        final_district = country +", "+ town
      elif 'city' in data:
        city =data['city']
        final_district = country +", "+ city
      else:
        final_district = country+", "+str(postalCode)
  else:
    if 'town' in data:
      print("t")
      town =data['town']
      final_district = country +", "+ town
    if 'city' in data:
      print("c")
      city =data['city']
      final_district = country +", "+ city
    else:
      print("e")
      final_district = country+", "+str(postalCode)

  return final_district

#TESTING (København S, 2300)
#coord="55.654726, 12.547222"   #dk
#get_location(coord)




"""## Distance between two points"""

import geopy.distance

def get_distance(coords_1,coords_2):
  distance= geopy.distance.geodesic(coords_1, coords_2).km
  return distance

#TESTING (279 KM)
#coords_1 = (52.2296756, 21.0122287)
#coords_2 = (52.406374, 16.9251681)
#get_distance(coords_1,coords_2)